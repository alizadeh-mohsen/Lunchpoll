// <auto-generated />
using System;
using LunchPoll.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LunchPoll.Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LunchPoll.Api.Data.Employee", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = "e1",
                            Name = "Alice"
                        },
                        new
                        {
                            Id = "e2",
                            Name = "Bob"
                        },
                        new
                        {
                            Id = "e3",
                            Name = "Charlie"
                        });
                });

            modelBuilder.Entity("LunchPoll.Api.Data.Poll", b =>
                {
                    b.Property<string>("EmployeeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RestaurantId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Selected")
                        .HasColumnType("bit");

                    b.HasKey("EmployeeId", "RestaurantId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Polls");
                });

            modelBuilder.Entity("LunchPoll.Api.Data.Restaurant", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Restaurants");

                    b.HasData(
                        new
                        {
                            Id = "r1",
                            Name = "Pizza Place"
                        },
                        new
                        {
                            Id = "r2",
                            Name = "Sushi Spot"
                        },
                        new
                        {
                            Id = "r3",
                            Name = "Burger Barn"
                        });
                });

            modelBuilder.Entity("LunchPoll.Api.Data.Poll", b =>
                {
                    b.HasOne("LunchPoll.Api.Data.Employee", "Employee")
                        .WithMany("Polls")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LunchPoll.Api.Data.Restaurant", "Restaurant")
                        .WithMany("Polls")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("LunchPoll.Api.Data.Employee", b =>
                {
                    b.Navigation("Polls");
                });

            modelBuilder.Entity("LunchPoll.Api.Data.Restaurant", b =>
                {
                    b.Navigation("Polls");
                });
#pragma warning restore 612, 618
        }
    }
}
